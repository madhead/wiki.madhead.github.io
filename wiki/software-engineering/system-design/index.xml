<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ðŸ§± System design on Everything I know</title>
    <link>https://wiki.madhead.me/wiki/software-engineering/system-design/</link>
    <description>Recent content in ðŸ§± System design on Everything I know</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://wiki.madhead.me/wiki/software-engineering/system-design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ðŸ”º CAP</title>
      <link>https://wiki.madhead.me/wiki/software-engineering/system-design/cap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wiki.madhead.me/wiki/software-engineering/system-design/cap/</guid>
      <description>Links You Canâ€™t Sacrifice Partition Tolerance [EN ðŸ‡ºðŸ‡¸] [Oct 2010]
Of the CAP theoremâ€™s Consistency, Availability, and Partition Tolerance, Partition Tolerance is mandatory in distributed systems. You cannot not choose it. Instead of CAP, you should think about your availability in terms of yield (~availability, percent of requests answered successfully) and harvest (~consistency, percent of required data actually included in the responses) and which of these two your system will sacrifice when failures happen.</description>
    </item>
    
  </channel>
</rss>
